name: 'Terraform'

on:
  push:
    branches:
      - "dev"
  pull_request:
    branches:
      - "dev"

permissions:
  contents: write
  id-token: write


jobs:
  terraform-dev:
    name: 'TerraformDev'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      environment: dev
      tf_actions_working_dir: ./tf
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.tf_actions_working_dir }}
    if:  (github.event.pull_request.base.ref == 'dev' ) || (github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Azure
        uses: azure/login@v1
        with:
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
          client-id: ${{ env.ARM_CLIENT_ID }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.1.7"
      - name: Terraform init azurerm backend
        uses: ahmedig/terraform-azurerm-backend@v4
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource_group_name: rg-dev-tf
          container_name: devtfstate
          storage_account_name: tfdevaction
          tf_working_directory: ./tf

      - name: Terraform
        run: terraform fmt -check
      - name: 'Terraform Validate'
        run: terraform validate
        continue-on-error: true
      - name: 'Terraform Plan'
        run: terraform plan -var-file=${{ env.environment }}.tfvars -out=plan.out
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: terraform apply 
        if: (github.ref == 'refs/heads/dev')
        run: |
          terraform apply plan.out
        shell: bash

